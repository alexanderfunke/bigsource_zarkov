/** * $Id$ * $Date$ * Source by BigSource Alexander Funke und Kim Christiansen GbR * Visit blog.bigsource.de for updates and more free code. * Please contact info@bigsource.de for more information. *//** * Copyright (c) 2008 BigSource Alexander Funke und Kim Christiansen GbR *  * Permission is hereby granted, free of charge, to any person  * obtaining a copy of this software and associated documentation  * files (the "Software"), to deal in the Software without  * restriction, including without limitation the rights to use,  * copy, modify, merge, publish, distribute, sublicense, and/or sell  * copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be  * included in all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT  * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR  * OTHER DEALINGS IN THE SOFTWARE. *//** * Publisher for Powerflasher SOS *  * @author kimchristiansen */package de.bigsource.model.logging.demonsterdebugger {	import nl.demonsters.debugger.MonsterDebugger;	import de.bigsource.model.logging.IPublisher;	import de.bigsource.model.logging.LogItem;	import de.bigsource.model.logging.LogLevel;	import flash.events.EventDispatcher;	import flash.utils.getDefinitionByName;	public class DeMonsterDebuggerPublisher extends EventDispatcher implements IPublisher 	{
		public static var clearOnConnect : Boolean = true;
		private var COLOR_FATAL : Number = 0xFF0000;
		private var COLOR_ERROR : Number = 0xFF6666;
		private var COLOR_WARN : Number = 0xFFCCCC;
		private var COLOR_INFO : Number = 0x333333;
		private var COLOR_DEBUG : Number = 0x000000;
		/**		 * Send LogItem to SOS		 */		public function sendLogItem(p_item : LogItem) : void 
		{  			var color : Number;			switch(p_item.level)			{				case LogLevel.FATAL:					color = COLOR_FATAL;					break;				case LogLevel.ERROR:					color = COLOR_ERROR;					break;				case LogLevel.WARN:					color = COLOR_WARN;					break;				case LogLevel.INFO:					color = COLOR_INFO;					break;				case LogLevel.DEBUG:					color = COLOR_DEBUG;					break;				default:			}			var stack : Array = new Error().getStackTrace().split("\n");			var caller : Array = String(stack[3]).split(" ");			var classPath : String = String(caller[1]).split("/")[0];						try			{				MonsterDebugger.trace(getDefinitionByName(classPath), p_item.data, color);			} catch(e : Error)			{				MonsterDebugger.trace(classPath, p_item.data, color);			}
		}		/**		 * Close connection		 */		public function destroy() : void		{		}
	}
}