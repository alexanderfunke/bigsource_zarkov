/** * $Id$ * $Date$ * Source by BigSource Alexander Funke und Kim Christiansen GbR * Visit blog.bigsource.de for updates and more free code. * Please contact info@bigsource.de for more information. *//** * Copyright (c) 2008 BigSource Alexander Funke und Kim Christiansen GbR *  * Permission is hereby granted, free of charge, to any person  * obtaining a copy of this software and associated documentation  * files (the "Software"), to deal in the Software without  * restriction, including without limitation the rights to use,  * copy, modify, merge, publish, distribute, sublicense, and/or sell  * copies of the Software, and to permit persons to whom the  * Software is furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be  * included in all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT  * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR  * OTHER DEALINGS IN THE SOFTWARE. */ /** * Data class storing log Levels *  * @author kimchristiansen */package de.bigsource.model.logging{ 	public class LogLevel	{		public static var ALL : int = 1;		public static var DEBUG : int = 2;		public static var INFO : int = 4;		public static var WARN : int = 8;		public static var ERROR : int = 16;		public static var FATAL : int = 32;
		/**		 * Returns name of log level		 */		public static function getLogLevelName( p_level : int) : String		{			switch(p_level)			{				case ALL:					return "ALL";					break;				case DEBUG:					return "DEBUG";					break;				case INFO:					return "INFO";					break;				case WARN:					return "WARN";					break;				case ERROR:					return "ERROR";					break;				case FATAL:					return "FATAL";					break;				default:					return "undefined";					break;			}		}	}}